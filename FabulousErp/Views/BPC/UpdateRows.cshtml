@using FabulousDB.Models
@model FabulousDB.Models.BPC_raw_settings
@{
    Layout = null;
}
@using (Ajax.BeginForm("UpdateRow", new AjaxOptions { UpdateTargetId = "RowSettings", OnSuccess = "ResetSelect" ,OnBegin="CloseDiloge"}))
{
    @Html.AntiForgeryToken()
    <input name="RptType" value="@ViewBag.RptType " type="hidden" />
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-sm-12 d-inline-block" id="RowDiv">
            <label class="control-label col-md-2">Row Id</label>
            <div class="col-md-10">
                @Html.DropDownList("Rows_id2", null, htmlAttributes: new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true" })
            </div>
        </div>
        <div class="col-sm-12 d-inline-block" id="AccountDiv">
            <label class="control-label col-md-2">Accounts</label>
            <div class="col-md-10">
                @Html.DropDownList("Accounts_id2", null, htmlAttributes: new { @class = "form-control selectpicker", multiple = "multiple", data_show_subtext = "true", data_live_search = "true" })
            </div>
        </div>
        <div class="col-sm-12 d-inline-block" id="AccountDiv">
            <label class="control-label col-md-2">Priority</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}
<script>
    function CloseDiloge(){
        $("#UpdateRowModel").modal("hide");
     
    }
</script>