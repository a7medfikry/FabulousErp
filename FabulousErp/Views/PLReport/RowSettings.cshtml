@using FabulousDB.Models
@model FabulousDB.Models.BPC_Relation
@{
    ViewBag.Title = "Row Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Latest compiled and minified JavaScript -->
@Html.IncludeVersionedJs("/_Content/BootstrapSelect/popper.min.js")
<link href="~/_Content/BootstrapSelect/bootstrap-select.min.css" rel="stylesheet" />
@Html.IncludeVersionedJs("/_Content/BootstrapSelect/bootstrap-select.min.js")

@using (Ajax.BeginForm("CreateRow", new AjaxOptions { UpdateTargetId = "RowSettings", OnSuccess = "ResetSelect" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="RptType" value="@Request["RptType"]" />
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Row_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Row_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Row_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="AccountDiv" style="display:none;">
            <label class="control-label col-md-2">Accounts</label>
            <div class="col-md-10">
                @Html.DropDownList("Accounts_id", null, htmlAttributes: new { @class = "form-control selectpicker", multiple = "multiple", data_show_subtext = "true", data_live_search = "true" })
            </div>
        </div>
        <div class="form-group" id="RowDiv" style="display:none;">
            <label class="control-label col-md-2">Row Id</label>
            <div class="col-md-10">
                @Html.DropDownList("Rows_id", null, htmlAttributes: new { @class = "form-control selectpicker", multiple = "multiple", data_show_subtext = "true", data_live_search = "true" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}
<div id="RowSettings" style="margin-top:20px;">
    @Html.Action("RowList")
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    $(function () {
        $("#Type").find("option[value='0']").attr("value", "");
        //  $('.mdb-select').dashboardCodeBsMultiSelect();

    })
    $("#Type").change(function () {
        if ($(this).val() == 1) {
            $("#AccountDiv").show();
            $("#RowDiv").hide();

        } else if ($(this).val() == 2) {
            $("#RowDiv").show();
            $("#AccountDiv").hide();
        } else {
            $("#AccountDiv").hide();
            $("#RowDiv").hide();
        }
    })
    function ResetSelect() {
        $("#Rows_id").find("option:selected").prop("selected", false)
        $("#Accounts_id").find("option:selected").prop("selected", false)
        UpdateRowId();
        UpdateAccountsId();
    }
    function UpdateRowId() {
        $.ajax({
            url: "/BalanceSheet/RowId",
            method: "POST",
            success: function (data) {
                $("#Rows_id").empty();

                $.each(data, function (k, i) {
                    $("#Rows_id").append("<option value='" + i.Id + "'>" + i.Row_name + "</option>")

                })
                $("#Rows_id").selectpicker('refresh');
            }
        })
    }
    function UpdateAccountsId() {
        $.ajax({
            url: "/BalanceSheet/AccountsId",
            method: "POST",
            success: function (data) {
                $("#Accounts_id").empty();
                $.each(data, function (k, i) {
                    $("#Accounts_id").append("<option value='" + i.Id + "'>" + i.Name + "</option>")
                })
                $("#Accounts_id").selectpicker('refresh');
            }
        })
    }
</script>