@model FabulousDB.Models.Fixed_assets_disposel

@{
    ViewBag.Title = "Create Disposel";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Ajax.BeginForm("Create", "Fixed_assets_disposel", new AjaxOptions { OnSuccess = "PrintDisposal" }, new { @id = "MainForm" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.EditorFor(model => model.Gl_transaction_id, new { htmlAttributes = new { @class = "form-control hide" } })

        <div class="form-group hide">
            @Html.LabelFor(model => model.Disposal_no, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Disposal_no, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Disposal_no, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Transaction_date, "Transaction date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Transaction_date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Transaction_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Disposal_date, "Disposal date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Disposal_date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Disposal_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Depreication_up_to_date, "Depre. Uptodate", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Depreication_up_to_date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Depreication_up_to_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assets_id, "Assets id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Assets_id", ViewBag.Assets_id as SelectList, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Assets_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Disposal_amount, "Disposal amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Disposal_amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Disposal_amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Currency_id, "Currency id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Currency_id", null, "", new { @class = "form-control", @id = "TCGE-CurrencyID" })
            </div>
        </div>
        <div class="form-group Width60">
            @Html.Label("text", "Reference", new { @class = "control-label col-md-2 MyLable" })
            <div class="col-md-10 MyDiv">
                @Html.Editor("Reference", "Reference", new { htmlAttributes = new { @class = "form-control", id = "Reference", required = "required" } })
            </div>
        </div>


        <div class="form-group hide">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="FirstFormBtn" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<section id="JVSecCont">
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button id="CreateDisposal" class="btn btn-success">Create</button>
        </div>
    </div>
    <button class="btn btn-primary ToggleTransAction">Show Jv</button>
    <section id="JVTransactionSec" style="display:none;">
        @Scripts.Render("~/MainTransaction")
        <section class="DebitCreditSection">
            <div class="hide">
                @{Html.RenderAction("GetBatchHeader", "C_GeneralEntryTransaction", new { TCS_JENum = true, area = "" });}

            </div>

            @Html.Action("GetMainTransaction", "Business", new { FixedAssets = true, area = "" })
        </section>
    </section>
</section>
<script>

    $(document).on("focusout", "#Transaction_date", function () {
        $("#TCGE-JEDate").val($(this).val());
        $("#TCGE-JEDate").trigger("focusout");

    })
    $(document).on("focusout", "#Reference", function () {
        $("#TCGE-Reference").val($(this).val());
        $("#TCGE-Describtion").val($(this).val())
    })
    $("#TCGE-CurrencyID,#Disposal_amount").change(function () {
        $("#Assets_id").trigger("change");
    })
    $("#Assets_id").change(function () {
        if ($("#TCGE-CurrencyID").val()) {
              var Url = "@Url.Action("GetDisposalDebitCreditAccountByAssetsId", "Assets_class")" + "?AssetsId=" + $("#Assets_id option:selected").val() + "&Disposal_amount=" + $("#Disposal_amount").val() + "&TransactionDate=" + $("#Transaction_date").val();
        GetAccountsAndExchangeRate(Url, $("#Disposal_amount").val(), $("#Transaction_date").val(), "Assets_id", true, null,
            function () {
                $("#TCGE-GTbl").find("#TCGE-TTbl").find("tr").remove();
            },
            function (Amount, Accounts) {
                $("#TCGE-GTbl").find("#TCGE-TTbl").find("tr").remove();

                var Cost = $("#Disposal_amount").val();

                $.each(Accounts, function (k, i) {
                    var TblCost = [{
                        Credit: i.CreditAccId,
                        Debit: i.DebitAccId,

                        CreditAmount: i.CreditAmount,
                        DebitAmount: i.DebitAmount,

                        CreditAccNum: i.CreditAccNum,
                        DebitAccNum: i.DebitAccNum,

                        DebitAccName: i.DebitAccName,
                        CreditAccName: i.CreditAccName,
                    }];
                    SetGlTbl(Cost, TblCost, true, true);
                })
            });
        }

    })
    $("#CreateDisposal").click(function () {
         var BatchId = "";
        var BostingToORThrow = @ViewBag.PostingToOrThrow;
        var asdasd = $(document).find("#TCGE-Describtion").val();
        if (!$(document).find("#TCGE-Describtion").val().toString().trim()) {
            $("#Reference").trigger("focusout")
        }
        var FormValidation= $("#MainForm").validate();
        if ($("#MainForm").valid()) {
            $(document).find(".MyError").remove();
            InsertTransactionData($("#TCGE-CompanyID").text(), BostingToORThrow, $("#TCGE-PostingDate").val(), $("#TCGE-JEDate").val(), $("#TCGE-Reference").val(), $("#TCGE-CurrencyID").val(), $("#TCGE-SystemRate").val(), $("#TCGE-TransactionRate").val(), "FIXRenw", "FIXRenw", BatchId, "",
                function (TransactionId) {
                    $("#Gl_transaction_id").val(TransactionId);
                    $("#FirstFormBtn").trigger("click");
                    RedirectInt("/FixedAssets/Fixed_assets_disposel/Create");
                },null,null,null,true)
        } else {
            $.each(FormValidation.errorList, function (k, i) {
                if ($(i.element).next("span").length <= 0) {
                    $(i.element).after("<span class='MyError' style='color:red;'>" + i.message + "</span>");
                } else {
                    $(i.element).next("<span class='MyError'  style='color:red;'>" + i.message + "</span>");
                }
            })
        }

    })
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
$("#Currency_id").change(function () {
     TransactionRateStatus("@FabulousErp.Business.FinancialForms.FixedAssets_Disposal")
    })
    function PrintDisposal(Id) {
        window.open("/FixedAssets/Fixed_assets_disposel/Details/" + Id + "?Print=true", "_blank")
    }
</script>
