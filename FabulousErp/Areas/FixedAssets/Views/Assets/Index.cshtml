@model IEnumerable<FabulousDB.Models.Asset>
@{
    ViewBag.Title = "Assets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="aaa">

</div>
<p>
    @if (Request["section"] != "Inquiry")
    {
        @Html.ActionLink("Create New", "Create", new { Setting = Request["Setting"] })
    }
    else
    {
        <button onclick="PrintThis();" class="btn btn-primary">Print</button>
    }
</p>
<h4 class="text-danger">
    @ViewBag.Error
</h4>
<section style="overflow:auto;">
    <table class="table">
        <tr>
            <th>
                Assets Number
            </th>
            <th>
                Description
            </th>
            <th>
               Date Of Orgin
            </th>
            <th>
               Creation Date
            </th>
            <th>
               Transaction Date
            </th>
            <th>
                Foreign Name
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                Acquisation Cost
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Assets_number)
                </td>
                <td style="text-align:@FabulousErp.Business.GetROL();">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @item.Date_of_orgin.ToShortDateString()
                </td>
                <td>
                    @if (item.Creation_date.HasValue)
                    {
                        @item.Creation_date.Value.ToShortDateString()
                    }
                </td>
                <td>
                    @if (item.Transaction_date.HasValue)
                    {
                        @item.Transaction_date.Value.ToShortDateString()
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Foreign_name)
                </td>

                <td>
                    @Enum.GetName(typeof(FabulousDB.Models.Assets_type), item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Acquisation_cost)

                </td>
                <td>
                    @if (Request["Setting"] != null && Request["Setting"] == "Edit")
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })

                    }
                    else if (Request["section"] == "Inquiry")
                    {
                        @Html.ActionLink("Details", "Details", new { id = item.Id })
                    }
                    else if (Request["section"] == "Transactions")
                    {
                        @Html.ActionLink("Void", "Delete", new { id = item.Id })
                    }
                </td>
            </tr>
        }

    </table>

</section>
