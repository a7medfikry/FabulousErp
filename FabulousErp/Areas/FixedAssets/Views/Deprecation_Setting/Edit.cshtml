@model FabulousDB.Models.Deprecation_Setting

@{
    ViewBag.Title = "Edit Setting";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Auto_or_manual, "Auto or manual", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Auto_or_manual_enum, new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.Auto_or_manual_enum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Deprecation_calcualtion, "Depr. calcualtion", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Deprecation_calcualtion_enum, new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.Deprecation_calcualtion_enum, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Deprecation_jv, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Deprecation_jv_enum, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Deprecation_jv_enum, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Change_deprecation_method, "Change depr. method", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Change_deprecation_method)
                @Html.ValidationMessageFor(model => model.Change_deprecation_method, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Can_add_assets_info, "Can add assets info", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Can_add_assets_info, new { htmlAttributes= new { @class = "v-middle" } })
                @Html.ValidationMessageFor(model => model.Can_add_assets_info, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
