@model FabulousDB.Models.Inv_quotation_request

@{
    ViewBag.Title = "Quotation Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Ajax.BeginForm("Create", "Inv_quotation_request", new AjaxOptions { OnSuccess = "SubmitOther" }, new { id = "FirstForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Date", DateTime.Now, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Po_id, "Po_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Po_id", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Po_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Within_days, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Within_days, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Within_days, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Vendore_id, "Vendore_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Vendore_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Vendore_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery_Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Delivery_Date", DateTime.Now, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Delivery_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Request_from, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Request_from, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Request_from, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="Submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}
<div>
    @Ajax.ActionLink("Add New Item", "Create", "Inv_quotation_request_item", new { }, new AjaxOptions
    {
        UpdateTargetId = "AddItem",
    InsertionMode = InsertionMode.InsertAfter
    }, new { @class = "btn btn-secondary" })
</div>
<section id="AddItem">
    @Html.Action("Edit", "Inv_quotation_request_item", new { Id = Model.Id })
</section>

<section style="margin-top:50px;"></section>
<div>
    <button id="Create" class="btn btn-success">Create</button>
</div>

<script>
    $("#Within_days").change(function () {
        $("#Delivery_Date").val(new moment($("#Date").val()).add('days', $("#Within_days").val()).format('YYYY-MM-DD'));
    })
    $(document).on("focusout", ".Quntaty", function () {
        var ThisQuntaty = $(this);
        var ThisItemId = $(this).parents(".form-horizontal").find(".item_id").val();
        $.ajax({
            url: "@Url.Action("GetItemUnitDecimalNumber","Inv_item")?ItemId=" + ThisItemId,
            method: "POST",
            success: function (data) {
                try {
                    if (data != 0) {
                        var Quntaty = ThisQuntaty.val().split(".")[1];
                        if (Quntaty.length > data) {
                            Talert("The Decimal Number Is More Than Item Decimal Number");
                            ThisQuntaty.val(0)
                        }
                    }
                    $("#Create").removeAttr("disabled");
                } catch (err) {
                    $("#Create").removeAttr("disabled");

                }
            },
            beforeSend: function () {
                $("#Create").attr("disabled", "disabled");
            }, error: function () {
                $("#Create").removeAttr("disabled");
                ThisQuntaty.val(0)
            }
        })
    });
</script>
<script>
    $("#Create").click(function () {
        $("#Submit").trigger("click");

        if ($("#FirstForm").valid()) {
            $("#Create").attr("disabled", "disabled")
            $("#Create").text("Please Wait")
        }
    })
    function SubmitOther(Id) {
        $("#AddItem").find(".Quotation_request_id").val(Id);
        $("#AddItem").find("form").submit();
        RedirectInt("/Inventory/Inv_quotation_request");
    }
</script>
@Html.IncludeVersionedJs("/Areas/Inventory/Script/CommonInventory.js")

