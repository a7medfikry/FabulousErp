@model FabulousDB.Models.Inv_item

@{
    ViewBag.Title = "items";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .MyCl {
        width:37% !important;
    }
</style>
<section id="MainForm">
    @using (Ajax.BeginForm(new AjaxOptions { OnSuccess = "SubmitOther" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.HiddenFor(x => x.Id)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-sm-12">
                <h3>General</h3>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Item_id, "Item id", htmlAttributes: new { @class = "control-label col-md-2", style = "width: 37%;" })
                <span class="star">*</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Item_id, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Item_id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2", style = "width: 37%;" })
                <span class="star">*</span>

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Short_description, htmlAttributes: new { @class = "control-label col-md-2", style = "width: 37%;" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Short_description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Short_description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Item_group_id, "Item_group_id", htmlAttributes: new { @class = "control-label col-md-2", style = "width: 37%;" })

                <div class="col-md-10">
                    @Html.DropDownList("Item_group_id", null, "", htmlAttributes: new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Item_group_id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Validation_method, htmlAttributes: new { @class = "control-label col-md-2", style = "width: 37%;" })
                <span class="star">*</span>
                <div class="col-md-10">
                    @Html.DropDownList("Validation_method", null, "", htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Validation_method, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2", style = "width: 37%;" })
                <span class="star">*</span>

                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Unit_of_measure_id, htmlAttributes: new { @class = "control-label col-md-2", style = "width: 37%;" })
                <span class="star">*</span>

                <div class="col-md-10">
                    @Html.DropDownList("Unit_of_measure_id", null, htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Unit_of_measure_id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @foreach (var value in Business.GetEnumValues<FabulousDB.Models.MartialService>())
                {

                    @Html.RadioButtonFor(m => m.Martial_or_service, value, new { @class = "v-middle MOrS", data_value = (int)value, required = "required" })
                    @Html.Label(value.ToString().Replace("_", " "), new { @class = "text-capitalize height100 v-middle Margin0", style = "width: 37%;" })
                    <span style="margin-left:20px;"></span>
                }
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Has_serial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Has_serial, new { htmlAttributes = new { @class = "v-middle CMOrS" } })
                    @Html.ValidationMessageFor(model => model.Has_serial, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Has_warranty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Has_warranty, new { htmlAttributes = new { @class = "v-middle CMOrS" } })
                    @Html.ValidationMessageFor(model => model.Has_warranty, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Has_expiry_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Has_expiry_date, new { htmlAttributes = new { @class = "v-middle CMOrS" } })
                    @Html.ValidationMessageFor(model => model.Has_expiry_date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Inactive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Inactive, new { htmlAttributes = new { @class = "v-middle" } })
                    @Html.ValidationMessageFor(model => model.Inactive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Has_password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Has_password, new { htmlAttributes = new { @class = "v-middle" } })
                    @Html.ValidationMessageFor(model => model.Has_password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group HasPasswordDiv" style="display:none;">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "v-middle" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>


            <br />
            <div class="col-sm-12">
                <h3>Tax</h3>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Vat Item Type :</label>
                <div class="col-md-10">
                    @Html.DropDownList("Vat_Item_type", null, FabulousErp.BusController.Translate("-Choose-"), new { @id = "TCT-itemType", @class = "form-control form-control-sm clearTax" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Vat Tax Type : </label>
                <div class="col-md-10">
                    @Html.DropDownList("Tax_type_id", null, FabulousErp.BusController.Translate("-Choose-"),
                                            new { @id = "TCT-taxType", @class = "form-control form-control-sm clearTax" })
                </div>
            </div>
            <div class="form-group validateTaxHeader taxTypeEffect">
                <label class="control-label col-md-2"> Vat Tbl Type :</label>
                <div class="col-md-10">
                    @Html.DropDownList("Tax_table_type_id", null,
                                            FabulousErp.BusController.Translate("-Choose-"),
                                            new { @id = "TCT-taxTableType", @class = "form-control form-control-sm clearTax" })
                </div>
            </div>

            <div class="form-group taxTypeEffect">
                <label class="control-label col-md-2">Tbl. Vat ID:</label>
                <div class="col-md-10">
                    @Html.DropDownList("Tbl_vat_Id", new SelectList(""), FabulousErp.BusController.Translate("-Choose-"), new { @id = "TCT-tableVatID", @class = "form-control form-control-sm clearTax", name = "Tbl_vat_Id" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Vat ID :</label>
                <div class="col-md-10">
                    @Html.DropDownList("Vat_id", new SelectList(""), FabulousErp.BusController.Translate("-Choose-"), new { @id = "TCT-vatID", @class = "form-control form-control-sm clearTax", name = "Vat_id" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Deducte Tax Id:</label>
                <div class="col-md-10">
                    @Html.DropDownList("DeductTaxIds", new SelectList(""), FabulousErp.BusController.Translate("-Choose-"), new { @id = "TCT-decuttaTaxID", @class = "form-control form-control-sm clearTax", name = "DeductTaxIds" })
                </div>
            </div>
            <div class="col-sm-12">
                <h3>Cost</h3>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Cost Center:</label>
                <div class="col-md-10">
                    @Html.DropDownList("Cost_center_id", null, FabulousErp.BusController.Translate("-Choose-"), new { @class = "form-control form-control-sm" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Cost Account:</label>
                <div class="col-md-10">
                    @Html.DropDownList("Cost_center_account_id", new SelectList(""), FabulousErp.BusController.Translate("-Choose-"), new { @class = "form-control form-control-sm" })
                </div>
            </div>
            <div class="col-sm-12">
                <h3>Other Option</h3>
            </div>

            <div class="form-group hide">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success FirstForm" />
                </div>
            </div>
        </div>
    }
</section>

<section id="Option">
    @if (Model.Id == 0)
    {
        @Html.Action("Create", "Inv_item_option")
    }
    else
    {
        @Html.Action("Edit", "Inv_item_option", new { ItemId = Model.Id })
    }
</section>

<section id="GlSection">
    @Html.Action("Create", "Inv_item_gl_accounts", new { ItemId = Model.Id })
</section>
<div>
    <hr />
    @Ajax.ActionLink("Add New Store Or Site", "Create", "Inv_item_store_site", new { }, new AjaxOptions
{
    UpdateTargetId = "StoreSite",
    InsertionMode = InsertionMode.InsertAfter
}, new { @class = "btn btn-secondary" })
</div>
<section id="StoreSite">
    @Html.Action("Edit", "Inv_item_store_site", new { ItemId = Model.Id })
</section>
@if (ViewBag.HasRecipe)
{
    <section id="RecipeSec">
        @Html.Action("AddRecipe", "Inv_item", new { ItemId = Model.Id })
    </section>
}

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" id="Create" class="btn btn-success" disabled="disabled" />
    </div>
</div>
<script>
    $(function () {
        $("#Type").trigger("change");

        var SetType = setInterval(function () {
            if ($.active <= 0) {
                try {
                    $("#TCT-taxType").trigger("change")
                    $("#TCT-vatID").val("@Model.Vat_id");
                    $("#TCT-tableVatID").val("@Model.Tbl_vat_Id");
                    var Arr = @try { @Html.Raw(Json.Encode(Model.Deduct_tax.Select(x => x.Deduct_id).ToList())) } catch { @Html.Raw("[]") };
                    $("#TCT-decuttaTaxID").val(Arr)
                    clearInterval(SetType);
                        } catch (err) {

                        }
                    }
        }, 500)
    })
    function UploadImage() {
        $(document).find(".StartImageUpload").trigger("click");
    }
    function SubmitOther(Id) {
        $("#GlSection").find("#Item_id").val(Id);
        $("#StoreSite").find(".Item_id").val(Id);
        $(document).find(".Inv_item_id").val(Id)
        $(document).find(".ItemId").val(Id)
        $("#StoreSite").find("form").submit();
        $("#Option").find("#Inv_item_id").val();
        $(document).find("#OptionForm").submit();
        $("#GlForm").trigger("click");
        @if (ViewBag.HasRecipe)
        {
            <text>
                var Recips = GetItemRecipe();
                $.each(Recips, function (k, i) {
                    i.Main_item_id=Id
                })
        $.ajax({
            url: "/Inventory/Inv_item/AddRecipe",
            data: { Item_recipe: Recips },
            method:"POST"
        })
            </text>
        }
        @if (ViewBag.Id == null)
        {
            <text>
             RedirectInt("/Inventory/Inv_item/Create?HasRecipe=@Request["HasRecipe"]")
             </text>
        }
        else
        {
            <text>
        RedirectInt("/Inventory/Inv_item?HasRecipe=@Request["HasRecipe"]");
            </text>
        }
    }
    $("#Create").click(function () {
        var ThisId = $("#MainForm").find("#Id").val();
         $.ajax({
                url: "/Inventory/Inv_item/DuplicateId?Item_id=" + $("#Item_id").val() + "&Id=" + ThisId,
                method:"POST",
                success: function (data) {
                    if (!data) {
                        Submit();
                    } else {
                        ModelMsg("@FabulousErp.BusController.Translate("This Item Id Already Exists")", "Duplicate Name", true);
                    }
                }
            })

    })
    function Submit() {
        ValidateAll(function () {
            $("#GlSection").find("form").validate();
            $("#MainForm").find("form").validate();
            if ($("#GlSection").find("form").valid()
                && $("#MainForm").find("form").valid()) {
                $(".FirstForm").trigger("click")
                DisableThis($("#Create"));
            }
        });
    }
    $("#Item_group_id").change(function () {
        $.ajax({
            url: "@Url.Action("GetGroupAccounts", "Inv_gorup_gl_accounts")?GorupId=" + $(this).val(),
            method: "POST",
            success: function (data) {
                $("#Inventory_id").val(data.Inventory_id);
                $("#Inventory_returne_id").val(data.Inventory_returne_id);
                $("#Damage_id").val(data.Damage_id);
                $("#Variancies_id").val(data.Variancies_id);
                $("#Sales_id").val(data.Sales_id);
                $("#Sales_return_id").val(data.Sales_return_id);
                $("#Cost_of_GS_id").val(data.Cost_of_GS_id);
                $("#Purchase_variance_id").val(data.Purchase_variance_id);


            }
        })
        $.ajax({
            url: "@Url.Action("GetTaxGroup", "Inv_item_group")?GorupId=" + $(this).val(),
            method: "POST",
            success: function (data) {
                $("#TCT-taxTableType").val(data.Tax_table_type_id);
                $("#TCT-taxType").val(data.Tax_type_id);
                $("#Type").val(data.Type);
                $("#Type").trigger("change")
                var SetType = setInterval(function () {
                    if ($.active <= 0) {
                        $("#TCT-vatID").val(data.Vat_id);
                        $("#TCT-tableVatID").val(data.Tbl_vat_Id);
                        var Arr = data.Deduct_tax.map(a => a.Deduct_id)
                        $("#TCT-decuttaTaxID").val(Arr)

                        $("#Cost_center_id").val(data.CostCenter).trigger("change");
                        SetCostAccount(data.CostCenterAccount);
                        clearInterval(SetType);
                        $("#TCT-taxType").trigger("change")
                    }
                },500)
            }
        })

        $.ajax({
            url:"@Url.Action("GetProp", "Inv_item_group")?GorupId=" + $(this).val(),
            method: "POST",
            success: function (data) {
                $("#Validation_method").val(data.Valution);
                $(".MOrS[data-value=" + data.MOS + "]").trigger("click").trigger("change");
                $("#Has_warranty").attr("checked",data.Has_warranty);
                $("#Has_expiry_date").attr("checked",data.Has_expiery);
                $("#Has_serial").attr("checked",data.Has_serial);
                $("#Unit_of_measure_id").val(data.UOM);
                ForceRefreshPicker();
            }
        })
    })
    function SetCostAccount(Cost) {
        setInterval(function () {
            $("#Cost_center_account_id").val(Cost);
        },500)
    }
</script>
<script>
     $("#Type").change(function () {
        //Change of tax Group to get tax code
        $("#TCT-taxGroupID").val($(this).val())
        var taxGroupID = $("#TCT-taxGroupID").val(),
            taxTableType = $('#TCT-taxTableType').val();
            
            $('#TCT-vatAmount').val('');
            $('select#TCT-vatID').empty();
            $('select#TCT-tableVatID').empty();
            $('select#TCT-decuttaTaxID').empty();
            $('#TCT-tableVatAmount').val('');
            $('#TCT-dacuttaAmount').val('');
            if (taxTableType === '0') {
                $('#TCT-tableVatAmount').val('0');
            }
            if (taxGroupID.length > 0) {
                $.ajax({
                    type: 'GET',
                    url: "/C_TaxTransaction/GetTaxCodeByGroup?taxGroupID=" + 1002,
                    success: function (result) {
                        if (result.length == 0) {
                            $("#TCT-vatID").append($('<option/>', {
                                value: "",
                                text: "@BusController.Translate("No Tax Code Created To this Group")"
                            }));

                            $("#TCT-tableVatID").append($('<option/>', {
                                value: "",
                                text:"@BusController.Translate("No Tax Code Created To this Group")"
                            }));

                            //$("#TCT-decuttaTaxID").append($('<option/>', {
                            //    value: "",
                            //    text: "No Tax Code Created To this Group"
                            //}));

                        } else {

                            $("#TCT-vatID").append($('<option/>', {
                                value: "",
                                text: ChooseTxt
                            })
                            );
                            $("#TCT-tableVatID").append($('<option/>', {
                                value: "",
                                text: ChooseTxt
                            }));

                            //$("#TCT-decuttaTaxID").append($('<option/>', {
                            //    value: "",
                            //    text:Choose
                            //}));

                            $.each(result, function (index, row) {
                                $("#TCT-vatID").append("<option value='" + row.CT_ID + "'>" + row.C_Taxcode + "</option>");
                                $("#TCT-tableVatID").append("<option value='" + row.CT_ID + "'>" + row.C_Taxcode + "</option>");
                                //$("#TCT-decuttaTaxID").append("<option value='" + row.CT_ID + "'>" + row.C_Taxcode + "</option>");
                            });
                        }
                        if ($("#Type").val() != "@Convert.ToInt32(FabulousDB.Models.Item_group_type.Both)") {
                            GetdecuttaTaxID();
                        } else {
                            GetdecuttaTaxIDBoth();
                        }
                    }
                });

            }
    })
    function GetdecuttaTaxID() {
        $(".selectpicker").selectpicker("destroy")
        $("#TCT-decuttaTaxID").removeClass("selectpicker");
        $("#TCT-decuttaTaxID").removeAttr("multiple");
        $.ajax({
            type: 'GET',
            url: "/C_TaxTransaction/GetTaxCodeByGroup?taxGroupID=" + $("#TCT-taxGroupID").val(),
            success: function (result) {
                $("#TCT-decuttaTaxID").append("<option value=''> Choose </option>");

                $.each(result, function (index, row) {
                    $("#TCT-decuttaTaxID").append("<option value='" + row.CT_ID + "'>" + row.C_Taxcode + "</option>");
                });
            }
        })
    }
    function GetdecuttaTaxIDBoth() {
        var FSales = false;
        var FPur = false;
       // $("#TCT-decuttaTaxID").append("<option value=''> Choose </option>");

        $.ajax({
            type: 'GET',
            url: "/C_TaxTransaction/GetTaxCodeByGroup?taxGroupID=" + 1,
            success: function (result) {
                $("#TCT-decuttaTaxID").append("<optgroup label='Payable'>");
                $.each(result, function (index, row) {
                    $("#TCT-decuttaTaxID").append("<option value='" + row.CT_ID + "'>" + row.C_Taxcode + "</option>");
                });
                $("#TCT-decuttaTaxID").append("</optgroup>");
                FSales = true;
            }
        })
        $.ajax({
            type: 'GET',
            url: "/C_TaxTransaction/GetTaxCodeByGroup?taxGroupID=" +2,
            success: function (result) {
                $("#TCT-decuttaTaxID").append("<optgroup label='Sales'>");
                $.each(result, function (index, row) {
                    $("#TCT-decuttaTaxID").append("<option value='" + row.CT_ID + "'> " + row.C_Taxcode + "</option>");
                });
                $("#TCT-decuttaTaxID").append("</optgroup>");
                FPur = true;
            }
        })
        var SalesPurInt = setInterval(function () {
            if (FSales && FPur) {
                $("#TCT-decuttaTaxID").addClass("selectpicker");
                $("#TCT-decuttaTaxID").attr("multiple", "multiple");
                $("#TCT-decuttaTaxID").attr("data-live-search", "true");
                $("#TCT-decuttaTaxID").selectpicker();
                clearInterval(SalesPurInt);
            }

        })

    }
</script>
<script>
    $(document).on("change", ".AddedStore_id",function () {
        var SiteId = $(this).parents(".form-horizontal").find("select.AddedSite_id");
        $.ajax({
            url: "@Url.Action("GetSitesByStoreId", "Inv_store_site")?StoreId=" + $(this).val(),
            method:"POST",
            success: function (data) {
                $(SiteId).append("<option value=''></option>");
                $.each(data, function (k, i) {
                    $(SiteId).append("<option value='" + i.Id + "'>" + i.Name + "</option>");
                })
            },
            beforeSend: function () {
                $(SiteId).empty();
            }
        })
    })
    $(document).on("change", "#Cost_center_id", function () {
        $.ajax({
            url: "/api/TransactionApi/GetAccountsOfCostCenter?costCenterID=" + $("#Cost_center_id").val(),
            success: function (data) {
                $("select#Cost_center_account_id").empty();
                $("select#Cost_center_account_id").append("<option></option>")

                $.each(data, function (k, i) {
                    $("select#Cost_center_account_id").append("<option value='" + i.C_CAID + "'>" + i.C_CostAccountID +"</option>")
                })
            }
        })
    })
    function RemoveSite(Id) {
        $(".DelBtn." + Id).prev("form").remove();
        $(".DelBtn." + Id).remove();
    }
</script>

<div>
    @if (Request["HasRecipe"] == "true")
    {
        @Html.ActionLink("Back to List", "Index", new { HasRecipe = "true" })
    }
    else
    {
        @Html.ActionLink("Back to List", "Index", new { })
    }
</div>
<script>
    $(function () {
        $("#SizeTypeEnum").attr("name", "Inv_item_option[0].Size_type")
        $("#WightTypeEnum").attr("name", "Inv_item_option[0].Wight_type")
    })
    $(".MOrS").change(function () {
        if ($(".MOrS").attr("data-value") == "@((int)FabulousDB.Models.MartialService.Service)") {
            $(".CMOrS").each(function () {
                if ($(".CMOrS").is(":checked")) {
                    $(".CMOrS").trigger("click")
                }
            })
            $(".CMOrS").attr("disabled", "disabled")
        } else {
            $(".CMOrS").removeAttr("disabled")

        }
    })
    $(function () {
        $(".MOrS").trigger("change");
    })
    RunAfterAjax(function () {
        $("#Create").removeAttr("disabled")
    })
    $("#Has_password").click(function () {
        CheckPassword();
    })
    function CheckPassword() {
        if ($("#Has_password").is(":checked")) {
            $(".HasPasswordDiv").show();
        } else {
            $(".HasPasswordDiv").hide();
        }
    }
    $(function () {
        CheckPassword();
    })
</script>
@Html.IncludeVersionedJs("/_Content/JS/Settings/TaxTransaction_Script.js")
@Html.IncludeVersionedJs("/Areas/Inventory/Script/CommonInventory.js")
<input id="TCT-taxGroupID" value="1" type="hidden">
