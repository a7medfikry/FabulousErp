@model FabulousDB.Models.Inv_po

@{
    ViewBag.Title = "Po";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    td {
        text-align: center;
    }
</style>

@using (Ajax.BeginForm("Create", new { }, new AjaxOptions { OnSuccess = "SubmitItems" }, new { id = "FirstForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group hide">
            @Html.LabelFor(model => model.Po_type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Po_type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Po_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.Pr_no_id, "Pr_no_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pr_no_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pr_no_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", type = "date", value = $"{DateTime.Now.ToString("yyyy-MM-dd")}" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vendore_id, "Vendore id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Vendore_id", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Vendore_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency_id, "Currency_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Currency_id", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Currency_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.System_rate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.System_rate, new { htmlAttributes = new { @class = "form-control maskmoney" } })
                @Html.ValidationMessageFor(model => model.System_rate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Transaction_rate, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Transaction_rate, new { htmlAttributes = new { @class = "form-control maskmoney" } })
                @Html.ValidationMessageFor(model => model.Transaction_rate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Difference, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Difference, new { htmlAttributes = new { @class = "form-control maskmoney" } })
                @Html.ValidationMessageFor(model => model.Difference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" id="SubmitFirst" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<section id="PoItems">
    @Html.Action("Create", "Inv_po_items")
</section>
<div class="form-group  col-sm-5 d-inline-block">
    <div class="col-md-offset-2 col-md-10">
        <button id="AddNewItem" class="btn btn-secondary">Add Item</button>
    </div>
</div>
<div class="form-group col-sm-5 d-inline-block">
    <div class="col-md-offset-2 col-md-10">
        <button id="Create" class="btn btn-success">Create</button>
    </div>
</div>
<section id="Items">
    <input id="ItemsList" type="hidden" />
    <table style="width:100%;">
        <tr>
            <th>Item Id</th>
            <th>Item Name</th>
            <th>U O M</th>
            <th>QTY</th>
            <th>Unit Cost</th>
            <th>Total</th>
        </tr>
        <tbody id="itemsBody"></tbody>
    </table>
</section>
<script>
    $(function () {
        $("#Currency_id").find("option").last().attr("selected", "selected");
        $("#Currency_id").trigger("change")
    })
</script>
<script>
    var ListOfItems = [];
    $("#AddNewItem").click(function () {
        var obj = $("#PoItems").find("form").serializeToJSON({

            // convert "true" and "false" to booleans true / false
            parseBooleans: true,
            parseFloat: {
                // auto detect NaN value and changes the value to zero
                nanToZero: true,
            }
        });
        ListOfItems.push(obj);
        $("#itemsBody").append("<tr>" +
            "<td>" + obj.Item_id + "</td>" +
            "<td>" + $("#PoItems").find("form").find("#ItemName").text() + "</td>" +
            "<td>" + $("#PoItems").find("form").find("#UOM_id").find("option:selected").text() + "</td>" +
            "<td>" + obj.Quantity + "</td>" +
            "<td>" + obj.Unit_priceMask + "</td>" +
            "<td>" + obj.TotalMask + "</td>" +
            "</tr>");
        $("#PoItems").find("form").find("#reset").trigger("click");
    })
</script>
<script>
    $("#Create").click(function () {
        $("#SubmitFirst").trigger("click");
        if ($("#FirstForm").valid()){
            $("#Create").attr("disabled","disabled")
        }
    });
    function SubmitItems(data) {
        alert("PO Number "+data.Po_num)
        for (var i = 0; i < ListOfItems.length; i++) {
            ListOfItems[0].Po_id = data.Id;
        }
        $.ajax({
            url: "@Url.Action("CreateList", "Inv_po_items")",
            data: { inv_po_items: ListOfItems },
            success: function () {
                RedirectInt(window.location.href);
            },
            method:"POST"
        })
    }
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
