@model FabulousDB.Models.Inv_purchase_request

@{
    ViewBag.Title = "Purchase Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Ajax.BeginForm("Create", "Inv_purchase_request", new AjaxOptions {OnSuccess="SubmitOther" },new {id="FirstForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Store_id, "Store_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Store_id", null, "", htmlAttributes: new { @class = "form-control Store_id", required = "required" })
            @Html.ValidationMessageFor(model => model.Store_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Site_id, "Site_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Site_id", new SelectList(new List<string>()), htmlAttributes: new { @class = "form-control Site_id" })
            @Html.ValidationMessageFor(model => model.Site_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Within_days, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Within_days, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Within_days, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("Date", DateTime.Now, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Within_days_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Within_days_date, new { htmlAttributes = new { @class = "form-control", type = "date", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Within_days_date, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
    </div>


    <div class="form-group hide">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" id="Submit" class="btn btn-success" />
        </div>
    </div>
</div>
}
<div>
    @Ajax.ActionLink("Add New Item", "Create","Inv_purchase_request_items",new { },new AjaxOptions {UpdateTargetId= "AddItem",
    InsertionMode=InsertionMode.InsertAfter},new {@class= "btn btn-secondary" })
</div>
<section id="AddItem">
    @Html.Action("Edit", "Inv_purchase_request_items",new { Id=Model.Id})
</section>
<section style="margin-top:50px;"></section>
<div>
    <button id="Create" class="btn btn-success">Create</button>
</div>

<script>
    $("#Within_days").change(function () {
        var MDate = $("#Date").val();
        var NewDate = moment(new Date(MDate), "yyyy-MM-dd").add(parseFloat($("#Within_days").val()), 'days').format('YYYY-MM-DD');
        $("#Within_days_date").val(NewDate);
    })
    $(function () {
        $("#Within_days").trigger("change");
        $("#Store_id").trigger("change");
        var Interval = setInterval(function () {
            if ($.active <= 0) {
                $("#Site_id").val("@Model.Site_id");
                clearInterval(Interval);
            }
        }, 250);
    })
    $(document).on("focusout", ".Quntaty", function () {
        var ThisQuntaty = $(this);
        var ThisItemId = $(this).parents(".form-horizontal").find(".item_id").val();
        $.ajax({
            url: "@Url.Action("GetItemUnitDecimalNumber","Inv_item")?ItemId=" + ThisItemId,
            method: "POST",
            success: function (data) {
                try {
                    if (data != 0) {
                        var Quntaty = ThisQuntaty.val().split(".")[1];
                        if (Quntaty.length > data) {
                            Talert("The Decimal Number Is More Than Item Decimal Number");
                            ThisQuntaty.val(0)
                        }
                    }
                    $("#Create").removeAttr("disabled");

                } catch (err) {
                    $("#Create").removeAttr("disabled");

                }
            },
            beforeSend: function () {
                $("#Create").attr("disabled", "disabled");
            }, error: function () {
                $("#Create").removeAttr("disabled");
                ThisQuntaty.val(0)
            }
        })
    });
</script>
<script>
    $("#Create").click(function () {
        $("#Submit").trigger("click");
        if ($("#FirstForm").valid()) {
            $("#Create").attr("disabled", "disabled")
            $("#Create").text("Please Wait")
        }
    })
    function SubmitOther(Id) {
        $("#AddItem").find(".Purchase_request_id").val(Id);
        $("#AddItem").find("form").submit();
        RedirectInt("/Inventory/Inv_purchase_request");
    }
</script>
@Html.IncludeVersionedJs("/Areas/Inventory/Script/CommonInventory.js")
